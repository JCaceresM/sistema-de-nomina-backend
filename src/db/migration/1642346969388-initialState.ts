import {MigrationInterface, QueryRunner} from "typeorm";

export class initialState1642346969388 implements MigrationInterface {
    name = 'initialState1642346969388'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "activity" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "description" text, "route" text, "parent" text, "status" text NOT NULL, "id_actividad" text NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "user_update" text, "user_insert" text, CONSTRAINT "PK_24625a1d6b1b089c8ae206fe467" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "address" ("id" SERIAL NOT NULL, "street" text NOT NULL, "city" text NOT NULL, "postal_code" text NOT NULL, "province" text NOT NULL, "municipalities" text NOT NULL, "sector" text NOT NULL, "status" text NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "user_update" text, "user_insert" text, CONSTRAINT "UQ_b8dc034edd93276f096ae394fbb" UNIQUE ("street"), CONSTRAINT "PK_d92de1f82754668b5f5f5dd4fd5" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "payroll_news" ("id" SERIAL NOT NULL, "amount" integer NOT NULL, "company_id" text NOT NULL, "status" text NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "user_update" text, "user_insert" text, "payroll_id" integer, CONSTRAINT "PK_f1d0c10d37c506c441d470071a6" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "company" ("id" SERIAL NOT NULL, "name" text NOT NULL, "RNC" text NOT NULL, "foundation_date" TIMESTAMP NOT NULL, "status" text NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "user_update" text, "user_insert" text, "fax" text, "tell" text, "cell" text, "email" text, CONSTRAINT "UQ_a76c5cd486f7779bd9c319afd27" UNIQUE ("name"), CONSTRAINT "UQ_fabc1dd0bd5f1fbf62cae6d3fe3" UNIQUE ("RNC"), CONSTRAINT "PK_056f7854a7afdba7cbd6d45fc20" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "positions" ("id" SERIAL NOT NULL, "status" text NOT NULL, "company_id" integer NOT NULL, "name" text NOT NULL, "max_salary" integer NOT NULL, "min_salary" integer NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "user_update" text, "user_insert" text, "department_id" integer, CONSTRAINT "PK_17e4e62ccd5749b289ae3fae6f3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "department" ("id" SERIAL NOT NULL, "name" text NOT NULL, "location" text NOT NULL, "budget" integer NOT NULL, "status" text NOT NULL, "type" text NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "user_update" text, "user_insert" text, "company_id" integer, CONSTRAINT "UQ_471da4b90e96c1ebe0af221e07b" UNIQUE ("name"), CONSTRAINT "PK_9a2213262c1593bffb581e382f5" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "roles" ("id" SERIAL NOT NULL, "rol_name" text NOT NULL, "type" text NOT NULL, "company_id" text NOT NULL, "status" text NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "user_update" text, "user_insert" text, CONSTRAINT "UQ_96b4863026d687359fe1a911e99" UNIQUE ("rol_name"), CONSTRAINT "PK_c1433d71a4838793a49dcad46ab" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "employee" ("id" SERIAL NOT NULL, "document_id" text NOT NULL, "user_name" text NOT NULL, "email_login" text NOT NULL, "password" text NOT NULL, "fist_name" text, "last_name" text, "gender" text, "age" integer, "marital_status" text, "status" text NOT NULL, "born_date" TIMESTAMP, "hire_date" TIMESTAMP, "nss" text, "fax" text, "tell" text, "cell" text, "email" text, "company_id" integer NOT NULL, "full_name_emergency_contact" text, "cell_emergency_contact" text, "tell_emergency_contact" text, "relation_emergency_contact" text, "payment_method" text, "blond_type" text, "relinquishment" TIMESTAMP, "relinquishment_detail" text, "updated_at" TIMESTAMP DEFAULT now(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "user_update" text, "working_time" text, "user_insert" text, "departmentIdId" integer, "position_id" integer, "payroll_id" integer, CONSTRAINT "UQ_3d42008c12e986e37ee3bdebbd2" UNIQUE ("document_id"), CONSTRAINT "UQ_8bfa2729294a76ccfca3da2836e" UNIQUE ("email_login"), CONSTRAINT "UQ_e37a589068c2014f159b217d14c" UNIQUE ("full_name_emergency_contact"), CONSTRAINT "REL_9f7b878d701bec3a4b854d0a82" UNIQUE ("payroll_id"), CONSTRAINT "PK_3c2bc72f03fd5abbbc5ac169498" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "payroll_record" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "status" text NOT NULL, "voucher" integer NOT NULL, "company_id" integer NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "user_update" text, "user_insert" text, "employee_id" integer, "payroll_id" integer, CONSTRAINT "PK_051e277a12e9149d53f0e1bad13" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "payroll" ("id" SERIAL NOT NULL, "salary" integer NOT NULL, "company_id" integer NOT NULL, "name" text NOT NULL, "type" text NOT NULL, "payroll_frequency" text NOT NULL, "status" text NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "user_update" text, "user_insert" text, CONSTRAINT "PK_7a76b819506029fc535b6e002e0" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "bank_account" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "description" text NOT NULL, "status" text NOT NULL, "operation" text NOT NULL, "balance" integer NOT NULL, "company_id" integer NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "user_update" text, "user_insert" text, "payroll_id" integer, CONSTRAINT "PK_f3246deb6b79123482c6adb9745" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "employee_roles_roles" ("employeeId" integer NOT NULL, "rolesId" integer NOT NULL, CONSTRAINT "PK_9296a6f31aad4b916cc6933a689" PRIMARY KEY ("employeeId", "rolesId"))`);
        await queryRunner.query(`CREATE INDEX "IDX_4ef68462ce4b4730a5e1b7e19b" ON "employee_roles_roles" ("employeeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_49a6909fca8a63df4e37edce97" ON "employee_roles_roles" ("rolesId") `);
        await queryRunner.query(`CREATE TABLE "employee_activities_activity" ("employeeId" integer NOT NULL, "activityId" integer NOT NULL, CONSTRAINT "PK_204091bd0138c68f6dea8372cf2" PRIMARY KEY ("employeeId", "activityId"))`);
        await queryRunner.query(`CREATE INDEX "IDX_cceefacdc37320b3526d6cffe7" ON "employee_activities_activity" ("employeeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_2fd761d252a7b6be97c8c30b1d" ON "employee_activities_activity" ("activityId") `);
        await queryRunner.query(`ALTER TABLE "payroll_news" ADD CONSTRAINT "FK_0ae3b7c789348184b8f5c07f812" FOREIGN KEY ("payroll_id") REFERENCES "payroll"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "positions" ADD CONSTRAINT "FK_e413c6578fcdae9a8fd673c5bc7" FOREIGN KEY ("department_id") REFERENCES "department"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "department" ADD CONSTRAINT "FK_f840e8ae1c80c7acb64dc668118" FOREIGN KEY ("company_id") REFERENCES "company"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "employee" ADD CONSTRAINT "FK_c25546d583fae618f7001696341" FOREIGN KEY ("departmentIdId") REFERENCES "department"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "employee" ADD CONSTRAINT "FK_6ab3ec557a640017d53ac0e0ab7" FOREIGN KEY ("position_id") REFERENCES "positions"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "employee" ADD CONSTRAINT "FK_9f7b878d701bec3a4b854d0a824" FOREIGN KEY ("payroll_id") REFERENCES "payroll"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payroll_record" ADD CONSTRAINT "FK_ae54c7b226d373987d1ac61aca5" FOREIGN KEY ("employee_id") REFERENCES "employee"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payroll_record" ADD CONSTRAINT "FK_265c4ac7b028642faddc9eefc7a" FOREIGN KEY ("payroll_id") REFERENCES "payroll"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "bank_account" ADD CONSTRAINT "FK_04eab46c659b9c980a0f61b4e96" FOREIGN KEY ("payroll_id") REFERENCES "payroll"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "employee_roles_roles" ADD CONSTRAINT "FK_4ef68462ce4b4730a5e1b7e19bc" FOREIGN KEY ("employeeId") REFERENCES "employee"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "employee_roles_roles" ADD CONSTRAINT "FK_49a6909fca8a63df4e37edce97c" FOREIGN KEY ("rolesId") REFERENCES "roles"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "employee_activities_activity" ADD CONSTRAINT "FK_cceefacdc37320b3526d6cffe77" FOREIGN KEY ("employeeId") REFERENCES "employee"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "employee_activities_activity" ADD CONSTRAINT "FK_2fd761d252a7b6be97c8c30b1d7" FOREIGN KEY ("activityId") REFERENCES "activity"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "employee_activities_activity" DROP CONSTRAINT "FK_2fd761d252a7b6be97c8c30b1d7"`);
        await queryRunner.query(`ALTER TABLE "employee_activities_activity" DROP CONSTRAINT "FK_cceefacdc37320b3526d6cffe77"`);
        await queryRunner.query(`ALTER TABLE "employee_roles_roles" DROP CONSTRAINT "FK_49a6909fca8a63df4e37edce97c"`);
        await queryRunner.query(`ALTER TABLE "employee_roles_roles" DROP CONSTRAINT "FK_4ef68462ce4b4730a5e1b7e19bc"`);
        await queryRunner.query(`ALTER TABLE "bank_account" DROP CONSTRAINT "FK_04eab46c659b9c980a0f61b4e96"`);
        await queryRunner.query(`ALTER TABLE "payroll_record" DROP CONSTRAINT "FK_265c4ac7b028642faddc9eefc7a"`);
        await queryRunner.query(`ALTER TABLE "payroll_record" DROP CONSTRAINT "FK_ae54c7b226d373987d1ac61aca5"`);
        await queryRunner.query(`ALTER TABLE "employee" DROP CONSTRAINT "FK_9f7b878d701bec3a4b854d0a824"`);
        await queryRunner.query(`ALTER TABLE "employee" DROP CONSTRAINT "FK_6ab3ec557a640017d53ac0e0ab7"`);
        await queryRunner.query(`ALTER TABLE "employee" DROP CONSTRAINT "FK_c25546d583fae618f7001696341"`);
        await queryRunner.query(`ALTER TABLE "department" DROP CONSTRAINT "FK_f840e8ae1c80c7acb64dc668118"`);
        await queryRunner.query(`ALTER TABLE "positions" DROP CONSTRAINT "FK_e413c6578fcdae9a8fd673c5bc7"`);
        await queryRunner.query(`ALTER TABLE "payroll_news" DROP CONSTRAINT "FK_0ae3b7c789348184b8f5c07f812"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2fd761d252a7b6be97c8c30b1d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_cceefacdc37320b3526d6cffe7"`);
        await queryRunner.query(`DROP TABLE "employee_activities_activity"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_49a6909fca8a63df4e37edce97"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4ef68462ce4b4730a5e1b7e19b"`);
        await queryRunner.query(`DROP TABLE "employee_roles_roles"`);
        await queryRunner.query(`DROP TABLE "bank_account"`);
        await queryRunner.query(`DROP TABLE "payroll"`);
        await queryRunner.query(`DROP TABLE "payroll_record"`);
        await queryRunner.query(`DROP TABLE "employee"`);
        await queryRunner.query(`DROP TABLE "roles"`);
        await queryRunner.query(`DROP TABLE "department"`);
        await queryRunner.query(`DROP TABLE "positions"`);
        await queryRunner.query(`DROP TABLE "company"`);
        await queryRunner.query(`DROP TABLE "payroll_news"`);
        await queryRunner.query(`DROP TABLE "address"`);
        await queryRunner.query(`DROP TABLE "activity"`);
    }

}
